Инициализация:  x <- 12

Ако искаме да го изпълним то трябва да го маркираме и да натиснем ctrl + enter

В R всичко е вектори. Дори х е вектор с дължина 1. Пример: my_vector <- c(1, 2, 3, 4, 5, 6)

Има и бърз начин за правене на вектори. Ако искаме например да направим вектор с числата от 1 - 10, то пишем : 

vector1 <- 1:10

Векторите се индексират от 1. Можем да ги достъпим както при масивите в С++. Например : vector1[2] 

Можем да индексираме чрез друг вектор. Например vector1[ c(1, 3, 5) ] Ще ни върне първи, трети и пети елемент на vector1

Ако пък напишем vector1[-c(1, 3, 5) ] това ни казва кои елементи да не взимаме, т.е всички елементи без първи, трети и пети.

Можем и да използваме и булеви стойности. Например: 

mask <- vector1 > 2 Връща ти масив от истини или лъжи за това дали елемента на вектора > 2. Този масив се нарича маска.

Ако направим vector1[mask] ще ни върне тези елементи на vector1 , които са > от 2

Матрици:
matrix(data = c(1:9), nrow = 3, ncol = 3, byrow=TRUE)

byrow - показва как да бъдат подредени елементите на матрицата. По default е по колони.

Елементите на матриците се достъпват чрез две стойности. Номер на реда и номер на колоната.

matrix[2,2]

Ако оставиш една от двете стойности то ще ти върне целия ред или колона
matrix[ ,2] ще ти върне втората колона 

Moжем и да задаваме имена на редовете и колоните чрез :

rownames(my_matrix) <- c("a", "b", "c") Променя имената на редовете

Векторите могат и да бъдат сортирани чрез sort(vector1)

Ф-ята order пък ти показва индексите на сортирания вектор. my_vector[order(my_vector)] същото като сортиране.

mean - връща средноартим на вектора
which.max(my_vector) - връща индекса на макс и мин елемент на вектора
which.max(my_vector)

which(my_vector > 5) връща индексите на елементите, които отговарят на това условие

Можем и да инсталираме пакети от конзолата чрез install.packages("името на пакета"). Например: install.packages("UsingR")
От тези пакети можем да използваме библиотека чрез

library("UsingR")

