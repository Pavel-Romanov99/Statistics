mask <- vector1 > 2
x <- 12
vector1 <- c(1, 2, 3, 4)
vector2 <- c(1, 2, 3, 4)
mask <- vector1 > 2
mask
vector1[mask]
my_m <- matrix(data = c(1:9), nrow = 3, ncol = 3, byrow=TRUE)
my_m[c(1,2), ]
order(my_vector)
my_vector <- c(3213,1,2313,21,32, 13)
order(my_vector)
which.max(my_vector)
which.min(my_vector)
which(my_vector > 5)
vec <- c(8,3,8,7,15,9,12,4,9,10,5,1)
matrix1 <- matrix(vec, nrow=4, ncol=3)
rownames(c("a", "b", "c"))
new_matrix <- cbind(matrix1, c(1, 3, 5, 7))
new_matrix
new_matrix2 <- rbind(matrix2, c(2,2,2,2))
new_matrix2 <- rbind(new_matrix, c(2,2,2,2))
new_matrix2
new_matrix[ ,1]
order(new_matrix[ ,1])
new_matrix[order_first_row, ]
order_first_row <- order(new_matrix[ ,1])
new_matrix[order_first_row, ]
View(homedata)
install.packages("UsingR")
library("UsingR")
?homedata
View(homedata)
which.max(homedata$y2000)
homedata$y1970[which.max(homedata$y2000)]
which(homedata$y2000 > 750000))
which(homedata$y2000 > 750000)
houses <- homedata$y1970[which(homedata$y2000 > 750000)]
houses
install.packages("MASS")
library("MASS")
length(survey$Sex[survey$Sex == "Male"])
survey[survey$Sex == "Male" & survey$Smoke != "Never", ]
survey[survey$Sex == "Male" & survey$Smoke != "Never" ]
install.packages("UsingR")
library("UsingR")
library(magrittr)
gender_vector <- c("male", "female", "female", "male", "male")
gender_vector
factor(gender_vector)
levels(factor_gender_vector)[c(2, 1)]
factor_gender_vector <- factor(gender_vector)
levels(factor_gender_vector)[c(2, 1)]
levels(factor_gender_vector)
table(gender_vector)
table(gender_vector) / length(gender_vector)
prop.table(table(factor_gender_vector))
table(factor_gender_vector)
prop.table(table(factor_gender_vector))
factor_gender_vector%>%
table() %>%
prop.table() %>%
pie()
factor_gender_vector %>%
table() %>%
prop.table() %>%
barplot()
survey$Smoke
survey$Smoke %>%
table()
survey$Smoke %>%
table() %>%
prop.table()
table(survey$Smoke, survey$Sex)  %>%
prop.table
table(survey$Smoke, survey$Sex = "Male")  %>%
prop.table
table(survey$Smoke, survey$Sex == "Male")  %>%
prop.table
table(survey$Smoke, survey$Sex)  %>%
prop.table
table(survey$Sex, survey$Smoke)
prop.table(table(survey$Sex, survey$Smoke), 1)
prop.table(table(survey$Sex, survey$Smoke),)
prop.table(table(survey$Sex, survey$Smoke), 2)
survey$Smoke %>%
table()
prop.table(table(survey$Sex, survey$Smoke), 1)
prop.table(table(survey$Sex, survey$Smoke), 1)
table(survey$Sex, survey$Smoke)
prop.table(table(survey$Sex, survey$Smoke), 1)
ifelse(survey$Age <= 20, "Under 20", ifelse(survey$Age <= 25, "21-25", "25+"))
table(survey$Group, survey$Smoke) %>%
prop.table() %>%
barplot(legend = TRUE, beside = TRUE)
survey$Group <- ifelse(survey$Age <= 20, "Under 20", ifelse(survey$Age <= 25, "21-25", "25+"))
survey$Group
table(survey$Group, survey$Smoke) %>%
prop.table() %>%
barplot(legend = TRUE, beside = TRUE)
s <- sd(survey$Height, na.rm = T)
s
m <- mean(survey$Height, na.rm = T)
m
survey %>%
filter(Height >= m - s & Height <= m + s) %>%
nrow()
library(MASS)
library(magrittr)
library(dplyr)
install.packages("tidyverse")
install.packages("tidyverse")
library(MASS)
library(magrittr)
library(dplyr)
survey %>%
filter(Height >= m - s & Height <= m + s) %>%
nrow()
survey
filter(Height >= m - s & Height <= m + s)
#първи начин
survey %>%
filter(Height >= m - s & Height <= m + s)
between(survey$Height, m - s, m + s)
cut(survey$Height, c(-Inf, m - s, m + s, +Inf)) %>%
table()
mean(survey$Height[survey$Sex == "Male"], na.rm = T)
between(survey$Height[survey$Sex == "Male"], m1 - 2*s1, m1 + 2*s1)
m1 <- mean(survey$Height[survey$Sex == "Male"], na.rm = T)
s1 <- sd(survey$Height[survey$Sex == "Male"], na.rm = T)
between(survey$Height[survey$Sex == "Male"], m1 - 2*s1, m1 + 2*s1)
survey$Height %>%
hist(probability = T)
survey$Height %>%
hist(probability = T)
lines(density(survey$Height, na.rm = T))
boxplot(survey$Height[survey$Sex == "Male"])
split.screen(figs = c(3,2))
screen(1)
boxplot(survey$Height)
screen(2)
hist(survey$Height, probability = TRUE)
lines(density(survey$Height, na.rm = T))
screen(3)
boxplot(survey$Height[survey$Sex == "Male"])
screen(4)
boxplot(survey$Height[survey$Sex == "Female"])
screen(5)
hist(survey$Height[survey$Sex == "Male"], probability = T)
lines(density(survey$Height, na.rm = T))
screen(6)
hist(survey$Height[survey$Sex == "Male"], probability = T)
lines(density(survey$Height, na.rm = T))
library(ggplot2)
diamonds$price
boxplot(diamonds$price ~ diamonds$cut)
mean(sample(1:6, size = n , replace = T) == side
mean(sample(1:6, size = n , replace = T) == side)
generate_dices <- function(n = 100, side = 6){
mean(sample(1:6, size = n , replace = T) == side) #dawa ni procenta 6ci
}
map(1:100, ~generate_dices()) %>%
unlist() %>%
cummean() %>%
plot(type = "l")
library(tidyverse)
map(1:100, ~generate_dices()) %>%
unlist() %>%
cummean() %>%
plot(type = "l")
abline(h = 1/6, col= "red")
sample(1:6, size = n , replace = T) == side
sample(1:6, size = 100 , replace = T) == side
sample(1:6, size = 100 , replace = T) == 6
map(1:100, ~generate_dices()) %>%
map(1:100, ~generate_dices())
map(1:100, ~generate_dices()) %>%
unlist()
map(1:100, ~generate_dices()) %>%
unlist() %>%
cummean()
library(ggplot2)
library(magrittr)
library(dplyr)
library(tidyverse)
install.packages('tinytex')
tinytex::install_tinytex()
diamonds[diamonds$price > 15000, ]
expensive <- diamonds[diamonds$price > 15000, ]
expensive
diamonds[diamonds$price > 15000, ]
diamonds[diamonds$price > 15000 ]
diamonds
diamonds$carat[diamonds$cut == "Ideal"]
diamonds$carat[diamonds$cut == "Ideal", ]
quantile(diamonds$price, 0.8)
quantile(ideal_carats)
ideal_carats <- diamonds$carat[diamonds$cut == "Ideal"]
ideal_carats
quantile(ideal_carats)
plot(diamonds$clarity , diamonds$cut)
plot(diamonds$price , diamonds$carat)
source('C:/Users/pavel/OneDrive/Работен плот/R Code/hw1.R', encoding = 'UTF-8', echo=TRUE)
plot(diamonds$price , diamonds$carat)
plot(diamonds$price , diamonds$carat)
under_one <- diamonds[diamonds$carat > 1, ]
under_one
boxplot(under_one$price ~ under_one$cut)
pbinom(4, 30, 1/6)
sum(x < 5) /100
x <- pbinom(26,51,0.5)
print(x)
dbinom(26, 51, 1/2)
x <- qbinom(0.25,51,1/2)
print(x)
rbinom(100, 30, 1/2)
rbinom(100, 30, 1/6)
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
x <- rbinom(100, 30, 1/6)
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
sum(x < 5) / 100
цлеар
clear
qbinom(0.25, 30, 1/6 )
pbinom(3, 8, 0.2)
dnbinom(5, 3, 0.2)
pnbinom(3, 3, 0.2, lower.tail = F )
pnbinom(2:5, 3, 0.2)
sum(pnbinom(2:5, 3, 0.2))
sum(pnbinom(5:8, 3, 0.2))
sum(pnbinom(1:5, 3, 0.2))
pnbinom(3, 3, 0.2, lower.tail = F )
y <- pnbinom(3, 3, 0.2, lower.tail = F )
plot(y)
#повече от 6 изтрела
y <- dnbinom(3, 3, 0.2, lower.tail = F )
plot(y)
dnbinom(5, 3, 0.2)
pnbinom(5, 3, 0.2)
help(pnbinom)
dbinom(1:5, 8, 0.72)
sum(dbinom(1:5, 8, 0.72))
pbinom(5, 8, 0.72)
pbinom(5, 8, 0.72)
sum(dbinom(1:5, 8, 0.72))
